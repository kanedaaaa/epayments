generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Merchant {
  id         String   @id @default(cuid())
  name       String
  email      String   @unique
  password   String   @unique // hash
  webhookUrl String?
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  apiKeys ApiKey[]
  orders  Order[]
}

model ApiKey {
  id         String   @id @default(cuid())
  merchantId String
  merchant   Merchant @relation(fields: [merchantId], references: [id], onDelete: Cascade)

  key        String    @unique
  name       String?
  isActive   Boolean   @default(true)
  expiresAt  DateTime?
  lastUsedAt DateTime?
  createdAt  DateTime  @default(now())
  revokedAt  DateTime?

  @@index([merchantId])
  @@index([key])
}

model Order {
  id             String   @id @default(cuid())
  merchantId     String
  merchant       Merchant @relation(fields: [merchantId], references: [id], onDelete: Cascade)

  amount         String   // Store as string to avoid precision issues
  currency       String   // "ETH", "MATIC", "BNB"
  status         String   @default("pending") // "pending", "paid", "expired", "failed"

  depositAddress String   @unique // Generated temp wallet address
  privateKey     String   // TODO: Encrypt this before storing!
  txHash         String?  // Transaction hash when paid

  expiresAt      DateTime
  paidAt         DateTime?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([merchantId])
  @@index([status])
  @@index([depositAddress])
}
